// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TunaBouzouki.Migrations
{
    [DbContext(typeof(TunaBouzoukiDbContext))]
    partial class TunaBouzoukiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("integer");

                    b.Property<int>("SongsId")
                        .HasColumnType("integer");

                    b.HasKey("GenresId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("GenreSong");
                });

            modelBuilder.Entity("Tuna.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 36,
                            Bio = "Heavy Deathmetal Band from Buffalo, New York",
                            Name = "Cannibal Corpse"
                        },
                        new
                        {
                            Id = 2,
                            Age = 13,
                            Bio = "Technical Deathcore band based on the internet. The band members live in different parts of the world",
                            Name = "Infant Annihilator"
                        },
                        new
                        {
                            Id = 3,
                            Age = 23,
                            Bio = "Experimental loop artist band from NYC",
                            Name = "Battles"
                        },
                        new
                        {
                            Id = 4,
                            Age = 27,
                            Bio = "Alt-indie psychedelic",
                            Name = "Animal Collective"
                        },
                        new
                        {
                            Id = 5,
                            Age = 70,
                            Bio = "English Folk Singer",
                            Name = "Shirley Collins"
                        });
                });

            modelBuilder.Entity("Tuna.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Deathmetal"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Deathcore"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Avant-Garde"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Indie"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Folk"
                        });
                });

            modelBuilder.Entity("Tuna.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Album = "English Fold Classics",
                            ArtistId = 5,
                            Length = 316,
                            Title = "Barbara Allen"
                        },
                        new
                        {
                            Id = 2,
                            Album = "The Elysian Grandeval Galèriarch",
                            ArtistId = 2,
                            Length = 1741,
                            Title = "Behold the Kingdom of the Wretched Undying"
                        },
                        new
                        {
                            Id = 3,
                            Album = "Juice B Crypts",
                            ArtistId = 3,
                            Length = 523,
                            Title = "A Loop So Nice / They Played it Twice"
                        },
                        new
                        {
                            Id = 4,
                            Album = "Time Skiffs",
                            ArtistId = 4,
                            Length = 629,
                            Title = "Prester John"
                        },
                        new
                        {
                            Id = 5,
                            Album = "Torture",
                            ArtistId = 1,
                            Length = 444,
                            Title = "Scourge of Iron"
                        });
                });

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.HasOne("Tuna.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuna.Models.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tuna.Models.Song", b =>
                {
                    b.HasOne("Tuna.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Tuna.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
